/*
깊이우선탐색(Depth First Search)
= (BFS와 마찬가지로) 그래프를 방문하거나 탐색하는 방법의 하나이다.

DFS는 주로 완전탐색, 백트래킹과 같이 탐색의 휫수, 즉 그래프의 최대 경로가 정해져있거나 예측 가능한 경우에 주로 이용한다.

절차)
1. 선택한 정잠에서 해야 할 작업 진행
2. 선택한 정점과 연결된 정점 중 아직 방문하지 않은 정점 방문
3. 만약 더는 방문할 정점이 없다면 이전 정점으로 되돌아감
4. 1~3 과정 반복

DFS는 선택한 정점을 저장하기 위한 도구이다.
큐(Queue) 대신 스택(Stack)을 이용한다는 점에서 BFS와 차이를 보인다.

DFS의 진행 절차 중 3단계를 좀 더 쉽게 구현하기 위해 스택을 사용하는데, 이떄 스택을 직접 사용하지 않고 주로 스택의 원리를 이용하는 재귀 함수를 통해 구현하는 편이다.

*/

//C++를 이용한 DFS 예제 코드

bool chk[1010];
void dfs(int start) {
	if (chk[start]) return; //이미 방문한 정점이라면 함수를 종료
	chk[start] = 1; //현재 정점을 방문했다고 표시

	//인접 리스트를 이용한 그래프
	for (int i = 0; i < adj[start].size(); ++i) { //현재 정점과 연결된 모든 정점을 확인
		int next = adj[start][i];
		dfs(next);
	}

	//인접 행렬을 이용한 그래프
	for (int i = 0; i < v; ++i) { //현재 정점과 연결된 모든 정점을 확인
		if (adj[start][i]) //start와 v가 연결된 경우에만 방문
			dfs(v);
	}
}