/*
분할 정복
= 전체 문제를 분할하여 풀 수 있을 만큼 작은 문제로 분할한 다음, 작은 문제를 각각 풀어 얻은 답들을 토대로 전체 문제의 답을 구하는 알고리즘.
= 작은 문제로 나눌 때 문제가 겹치지 않게 나눈다. (동적계획법과의 차이점)

절차)
1. 문제를 나눈다. 이때 나눠진 두 문제는 겹치지 않는 문제여야 하며 빠진 부분이 있어서는 안 된다.
2. 만약 아직 문제를 나눌 수 있다면 1번 과정을 반복한다.
3. 문제를 더 나눌 수 없다면 나눠진 문제를 해결한다.
4. 해결한 문제를 합친다.
5. 만약 아직 문제를 합칠 수 있다면 4번 과정을 반복한다.

분할 정복 알고리즘을 이용한 유명한 문제: 합병 정렬, a의 n승 구하기.
*/


int pow(int a, int n) {
	if (n == 0) return 1;
	if (n == 1) return a;

	int res;
	if (n % 2)
		res = a * pow(a, n - 1);
	else {
		res = pow(a, n / 2);
		res *= res;
	}
	return res;
}

/*
a의 n승을 구하기 위해 이렇게 문제를 나눴다.

1. n이 홀수하면 a의 n승을 'a * a의 n-1승'으로 문제를 나눈다.
2. n이 짝수하면 a의 n승을 a의 2분의 n승 * a의 2분의 n승으로 나눈다.

이후 구한 값을 이용해 문제를 합쳐간다.
*/

/*
분할 정복은 다른 알고리즘과 함께 사용하는 경우가 많다.
분할 정복은 문제를 반 이상으로 나누는 경우가 많아 일반적으로 시간 복잡도가 log N이 붙는다.
*/